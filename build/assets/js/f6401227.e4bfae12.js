"use strict";(self.webpackChunknuclear_docs=self.webpackChunknuclear_docs||[]).push([[131],{5936:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"development/environment","title":"Environment Configuration","description":"Complete guide to configuring environment variables, settings, and deployment configurations for the Nuclear application.","source":"@site/docs/development/environment.md","sourceDirName":"development","slug":"/development/environment","permalink":"/docs/development/environment","draft":false,"unlisted":false,"editUrl":"https://github.com/nuclear-app/doc/tree/main/docs/development/environment.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Available Scripts","permalink":"/docs/development/scripts"},"next":{"title":"Database & Prisma","permalink":"/docs/development/database"}}');var o=i(4848),s=i(8453);const t={sidebar_position:4},a="Environment Configuration",l={},c=[{value:"\ud83d\udd27 Environment Variables",id:"-environment-variables",level:2},{value:"Core Environment Variables",id:"core-environment-variables",level:3},{value:"Database Configuration",id:"database-configuration",level:4},{value:"Authentication Configuration",id:"authentication-configuration",level:4},{value:"Supabase Configuration (Optional)",id:"supabase-configuration-optional",level:4},{value:"Development Environment",id:"development-environment",level:3},{value:"Development Settings",id:"development-settings",level:4},{value:"Development Database",id:"development-database",level:4},{value:"Production Environment",id:"production-environment",level:3},{value:"Production Settings",id:"production-settings",level:4},{value:"Production Database",id:"production-database",level:4},{value:"\ud83d\udcc1 Configuration Files",id:"-configuration-files",level:2},{value:"Environment File Structure",id:"environment-file-structure",level:3},{value:"Development Environment",id:"development-environment-1",level:4},{value:"Production Environment",id:"production-environment-1",level:4},{value:"Example Environment File",id:"example-environment-file",level:4},{value:"Next.js Configuration",id:"nextjs-configuration",level:3},{value:"Next.js Config",id:"nextjs-config",level:4},{value:"TypeScript Configuration",id:"typescript-configuration",level:4},{value:"Prisma Configuration",id:"prisma-configuration",level:3},{value:"Prisma Schema",id:"prisma-schema",level:4},{value:"Prisma Environment",id:"prisma-environment",level:4},{value:"\ud83d\udd12 Security Configuration",id:"-security-configuration",level:2},{value:"Environment Variable Security",id:"environment-variable-security",level:3},{value:"Sensitive Variables",id:"sensitive-variables",level:4},{value:"Public Variables",id:"public-variables",level:4},{value:"Security Best Practices",id:"security-best-practices",level:3},{value:"Environment Variable Validation",id:"environment-variable-validation",level:4},{value:"Environment Variable Types",id:"environment-variable-types",level:4},{value:"\ud83d\ude80 Deployment Configuration",id:"-deployment-configuration",level:2},{value:"Vercel Deployment",id:"vercel-deployment",level:3},{value:"Vercel Configuration",id:"vercel-configuration",level:4},{value:"Environment Variables in Vercel",id:"environment-variables-in-vercel",level:4},{value:"Docker Deployment",id:"docker-deployment",level:3},{value:"Dockerfile",id:"dockerfile",level:4},{value:"Docker Compose",id:"docker-compose",level:4},{value:"Environment-Specific Configurations",id:"environment-specific-configurations",level:3},{value:"Development Environment",id:"development-environment-2",level:4},{value:"Production Environment",id:"production-environment-2",level:4},{value:"Configuration Loader",id:"configuration-loader",level:4},{value:"\ud83d\udd27 Environment Setup Scripts",id:"-environment-setup-scripts",level:2},{value:"Setup Scripts",id:"setup-scripts",level:3},{value:"Development Setup",id:"development-setup",level:4},{value:"Production Setup",id:"production-setup",level:4},{value:"Environment Validation",id:"environment-validation",level:3},{value:"Validation Script",id:"validation-script",level:4},{value:"Package.json Scripts",id:"packagejson-scripts",level:4},{value:"\ud83d\udcca Environment Monitoring",id:"-environment-monitoring",level:2},{value:"Environment Health Check",id:"environment-health-check",level:3},{value:"Environment Information",id:"environment-information",level:3},{value:"\ud83d\udcda Related Documentation",id:"-related-documentation",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"environment-configuration",children:"Environment Configuration"})}),"\n",(0,o.jsx)(e.p,{children:"Complete guide to configuring environment variables, settings, and deployment configurations for the Nuclear application."}),"\n",(0,o.jsx)(e.h2,{id:"-environment-variables",children:"\ud83d\udd27 Environment Variables"}),"\n",(0,o.jsx)(e.h3,{id:"core-environment-variables",children:"Core Environment Variables"}),"\n",(0,o.jsx)(e.h4,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env\nDATABASE_URL="postgresql://username:password@localhost:5432/nuclear_db"\nDIRECT_URL="postgresql://username:password@localhost:5432/nuclear_db"\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Required for:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Prisma database connection"}),"\n",(0,o.jsx)(e.li,{children:"Database migrations"}),"\n",(0,o.jsx)(e.li,{children:"Application startup"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Format:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"postgresql://username:password@host:port/database"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"postgresql://username:password@host:port/database?schema=public"})}),"\n"]}),"\n",(0,o.jsx)(e.h4,{id:"authentication-configuration",children:"Authentication Configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env\nNEXTAUTH_SECRET="your-super-secret-key-here"\nNEXTAUTH_URL="http://localhost:3000"\nNEXTAUTH_URL_INTERNAL="http://localhost:3000"\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Required for:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"NextAuth.js session management"}),"\n",(0,o.jsx)(e.li,{children:"JWT token signing"}),"\n",(0,o.jsx)(e.li,{children:"Authentication callbacks"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Security Notes:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Use a strong, random secret for ",(0,o.jsx)(e.code,{children:"NEXTAUTH_SECRET"})]}),"\n",(0,o.jsxs)(e.li,{children:["Generate with: ",(0,o.jsx)(e.code,{children:"openssl rand -base64 32"})]}),"\n",(0,o.jsx)(e.li,{children:"Never commit secrets to version control"}),"\n"]}),"\n",(0,o.jsx)(e.h4,{id:"supabase-configuration-optional",children:"Supabase Configuration (Optional)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env\nSUPABASE_URL="https://your-project.supabase.co"\nSUPABASE_ANON_KEY="your-anon-key"\nSUPABASE_SERVICE_ROLE_KEY="your-service-role-key"\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Used for:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Supabase database hosting"}),"\n",(0,o.jsx)(e.li,{children:"Real-time subscriptions"}),"\n",(0,o.jsx)(e.li,{children:"Storage services"}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,o.jsx)(e.h4,{id:"development-settings",children:"Development Settings"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.local (development only)\nNODE_ENV="development"\nNEXT_PUBLIC_APP_URL="http://localhost:3000"\nNEXT_PUBLIC_API_URL="http://localhost:3000/api"\n\n# Debug settings\nDEBUG="*"\nLOG_LEVEL="debug"\n'})}),"\n",(0,o.jsx)(e.h4,{id:"development-database",children:"Development Database"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.local\nDATABASE_URL="postgresql://postgres:password@localhost:5432/nuclear_dev"\nDIRECT_URL="postgresql://postgres:password@localhost:5432/nuclear_dev"\n\n# Local PostgreSQL\nPOSTGRES_HOST="localhost"\nPOSTGRES_PORT="5432"\nPOSTGRES_DB="nuclear_dev"\nPOSTGRES_USER="postgres"\nPOSTGRES_PASSWORD="password"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"production-environment",children:"Production Environment"}),"\n",(0,o.jsx)(e.h4,{id:"production-settings",children:"Production Settings"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.production\nNODE_ENV="production"\nNEXT_PUBLIC_APP_URL="https://your-domain.com"\nNEXT_PUBLIC_API_URL="https://your-domain.com/api"\n\n# Security\nNEXTAUTH_SECRET="your-production-secret"\nNEXTAUTH_URL="https://your-domain.com"\n\n# Performance\nNEXT_PUBLIC_ENABLE_ANALYTICS="true"\nNEXT_PUBLIC_ENABLE_DEBUG="false"\n'})}),"\n",(0,o.jsx)(e.h4,{id:"production-database",children:"Production Database"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.production\nDATABASE_URL="postgresql://username:password@production-host:5432/nuclear_prod"\nDIRECT_URL="postgresql://username:password@production-host:5432/nuclear_prod"\n\n# Connection pooling\nDATABASE_POOL_MIN="2"\nDATABASE_POOL_MAX="10"\n'})}),"\n",(0,o.jsx)(e.h2,{id:"-configuration-files",children:"\ud83d\udcc1 Configuration Files"}),"\n",(0,o.jsx)(e.h3,{id:"environment-file-structure",children:"Environment File Structure"}),"\n",(0,o.jsx)(e.h4,{id:"development-environment-1",children:"Development Environment"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.local (git ignored)\nDATABASE_URL="postgresql://postgres:password@localhost:5432/nuclear_dev"\nNEXTAUTH_SECRET="dev-secret-key"\nNEXTAUTH_URL="http://localhost:3000"\nNODE_ENV="development"\n'})}),"\n",(0,o.jsx)(e.h4,{id:"production-environment-1",children:"Production Environment"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.production\nDATABASE_URL="postgresql://username:password@host:5432/nuclear_prod"\nNEXTAUTH_SECRET="production-secret-key"\nNEXTAUTH_URL="https://your-domain.com"\nNODE_ENV="production"\n'})}),"\n",(0,o.jsx)(e.h4,{id:"example-environment-file",children:"Example Environment File"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# .env.example\n# Database\nDATABASE_URL="postgresql://username:password@localhost:5432/nuclear_db"\nDIRECT_URL="postgresql://username:password@localhost:5432/nuclear_db"\n\n# Authentication\nNEXTAUTH_SECRET="your-secret-key"\nNEXTAUTH_URL="http://localhost:3000"\n\n# Supabase (optional)\nSUPABASE_URL="https://your-project.supabase.co"\nSUPABASE_ANON_KEY="your-anon-key"\nSUPABASE_SERVICE_ROLE_KEY="your-service-role-key"\n\n# Application\nNODE_ENV="development"\nNEXT_PUBLIC_APP_URL="http://localhost:3000"\nNEXT_PUBLIC_API_URL="http://localhost:3000/api"\n\n# Debug\nDEBUG="*"\nLOG_LEVEL="debug"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"nextjs-configuration",children:"Next.js Configuration"}),"\n",(0,o.jsx)(e.h4,{id:"nextjs-config",children:"Next.js Config"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// next.config.js\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    appDir: true,\n  },\n  env: {\n    CUSTOM_KEY: process.env.CUSTOM_KEY,\n  },\n  images: {\n    domains: ['localhost', 'your-domain.com'],\n  },\n  async headers() {\n    return [\n      {\n        source: '/api/:path*',\n        headers: [\n          { key: 'Access-Control-Allow-Credentials', value: 'true' },\n          { key: 'Access-Control-Allow-Origin', value: '*' },\n          { key: 'Access-Control-Allow-Methods', value: 'GET,POST,PUT,DELETE,OPTIONS' },\n          { key: 'Access-Control-Allow-Headers', value: 'Content-Type' },\n        ],\n      },\n    ];\n  },\n};\n\nmodule.exports = nextConfig;\n"})}),"\n",(0,o.jsx)(e.h4,{id:"typescript-configuration",children:"TypeScript Configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'// tsconfig.json\n{\n  "compilerOptions": {\n    "target": "es5",\n    "lib": ["dom", "dom.iterable", "es6"],\n    "allowJs": true,\n    "skipLibCheck": true,\n    "strict": true,\n    "forceConsistentCasingInFileNames": true,\n    "noEmit": true,\n    "esModuleInterop": true,\n    "module": "esnext",\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "isolatedModules": true,\n    "jsx": "preserve",\n    "incremental": true,\n    "plugins": [\n      {\n        "name": "next"\n      }\n    ],\n    "baseUrl": ".",\n    "paths": {\n      "@/*": ["./*"],\n      "@/components/*": ["./components/*"],\n      "@/lib/*": ["./lib/*"],\n      "@/types/*": ["./types/*"]\n    }\n  },\n  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],\n  "exclude": ["node_modules"]\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"prisma-configuration",children:"Prisma Configuration"}),"\n",(0,o.jsx)(e.h4,{id:"prisma-schema",children:"Prisma Schema"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-prisma",children:'// prisma/schema.prisma\ngenerator client {\n  provider = "prisma-client-js"\n  output   = "../lib/generated/prisma"\n}\n\ndatasource db {\n  provider  = "postgresql"\n  url       = env("DATABASE_URL")\n  directUrl = env("DIRECT_URL")\n}\n\n// Models...\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  name      String?\n  mode      UserMode @default(STUDENT)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  blocks    Block[]\n  folders   Folder[]\n  pointsUpdates PointsUpdate[]\n\n  @@map("users")\n}\n\n// Other models...\n'})}),"\n",(0,o.jsx)(e.h4,{id:"prisma-environment",children:"Prisma Environment"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# prisma/.env\nDATABASE_URL="postgresql://username:password@localhost:5432/nuclear_db"\nDIRECT_URL="postgresql://username:password@localhost:5432/nuclear_db"\n'})}),"\n",(0,o.jsx)(e.h2,{id:"-security-configuration",children:"\ud83d\udd12 Security Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"environment-variable-security",children:"Environment Variable Security"}),"\n",(0,o.jsx)(e.h4,{id:"sensitive-variables",children:"Sensitive Variables"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Never commit these to version control\nNEXTAUTH_SECRET="super-secret-key"\nDATABASE_URL="postgresql://username:password@host:5432/db"\nSUPABASE_SERVICE_ROLE_KEY="service-role-key"\nAPI_KEYS="external-api-keys"\n'})}),"\n",(0,o.jsx)(e.h4,{id:"public-variables",children:"Public Variables"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Safe to commit (client-side accessible)\nNEXT_PUBLIC_APP_URL="https://your-domain.com"\nNEXT_PUBLIC_API_URL="https://your-domain.com/api"\nNEXT_PUBLIC_ENABLE_ANALYTICS="true"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,o.jsx)(e.h4,{id:"environment-variable-validation",children:"Environment Variable Validation"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// lib/env.ts\nimport { z } from 'zod';\n\nconst envSchema = z.object({\n  DATABASE_URL: z.string().url(),\n  NEXTAUTH_SECRET: z.string().min(32),\n  NEXTAUTH_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'production', 'test']),\n  SUPABASE_URL: z.string().url().optional(),\n  SUPABASE_ANON_KEY: z.string().optional(),\n});\n\nexport const env = envSchema.parse(process.env);\n\n// Usage\nimport { env } from '@/lib/env';\n\nconst databaseUrl = env.DATABASE_URL;\n"})}),"\n",(0,o.jsx)(e.h4,{id:"environment-variable-types",children:"Environment Variable Types"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// types/env.d.ts\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      DATABASE_URL: string;\n      DIRECT_URL: string;\n      NEXTAUTH_SECRET: string;\n      NEXTAUTH_URL: string;\n      NEXTAUTH_URL_INTERNAL?: string;\n      SUPABASE_URL?: string;\n      SUPABASE_ANON_KEY?: string;\n      SUPABASE_SERVICE_ROLE_KEY?: string;\n      NODE_ENV: 'development' | 'production' | 'test';\n      NEXT_PUBLIC_APP_URL: string;\n      NEXT_PUBLIC_API_URL: string;\n      NEXT_PUBLIC_ENABLE_ANALYTICS?: string;\n      NEXT_PUBLIC_ENABLE_DEBUG?: string;\n      DEBUG?: string;\n      LOG_LEVEL?: string;\n    }\n  }\n}\n\nexport {};\n"})}),"\n",(0,o.jsx)(e.h2,{id:"-deployment-configuration",children:"\ud83d\ude80 Deployment Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"vercel-deployment",children:"Vercel Deployment"}),"\n",(0,o.jsx)(e.h4,{id:"vercel-configuration",children:"Vercel Configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'// vercel.json\n{\n  "buildCommand": "bun run build",\n  "devCommand": "bun coolDev",\n  "installCommand": "bun install",\n  "framework": "nextjs",\n  "env": {\n    "DATABASE_URL": "@database-url",\n    "NEXTAUTH_SECRET": "@nextauth-secret",\n    "NEXTAUTH_URL": "@nextauth-url"\n  }\n}\n'})}),"\n",(0,o.jsx)(e.h4,{id:"environment-variables-in-vercel",children:"Environment Variables in Vercel"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Set in Vercel dashboard or CLI\nvercel env add DATABASE_URL\nvercel env add NEXTAUTH_SECRET\nvercel env add NEXTAUTH_URL\n\n# Or use vercel.json\n{\n  "env": {\n    "DATABASE_URL": "postgresql://...",\n    "NEXTAUTH_SECRET": "your-secret",\n    "NEXTAUTH_URL": "https://your-domain.vercel.app"\n  }\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,o.jsx)(e.h4,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-dockerfile",children:'# Dockerfile\nFROM oven/bun:1 as base\nWORKDIR /app\n\n# Install dependencies\nCOPY package.json bun.lockb ./\nRUN bun install --frozen-lockfile\n\n# Copy source code\nCOPY . .\n\n# Build application\nRUN bun run build\n\n# Production stage\nFROM oven/bun:1-slim as production\nWORKDIR /app\n\n# Copy built application\nCOPY --from=base /app/.next ./.next\nCOPY --from=base /app/public ./public\nCOPY --from=base /app/package.json ./package.json\nCOPY --from=base /app/bun.lockb ./bun.lockb\nCOPY --from=base /app/next.config.js ./next.config.js\n\n# Install production dependencies\nRUN bun install --frozen-lockfile --production\n\n# Expose port\nEXPOSE 3000\n\n# Start application\nCMD ["bun", "start"]\n'})}),"\n",(0,o.jsx)(e.h4,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  app:\n    build: .\n    ports:\n      - "3000:3000"\n    environment:\n      - DATABASE_URL=postgresql://postgres:password@db:5432/nuclear\n      - NEXTAUTH_SECRET=your-secret\n      - NEXTAUTH_URL=http://localhost:3000\n    depends_on:\n      - db\n    volumes:\n      - ./uploads:/app/uploads\n\n  db:\n    image: postgres:15\n    environment:\n      - POSTGRES_DB=nuclear\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,o.jsx)(e.h3,{id:"environment-specific-configurations",children:"Environment-Specific Configurations"}),"\n",(0,o.jsx)(e.h4,{id:"development-environment-2",children:"Development Environment"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// config/development.ts\nexport const developmentConfig = {\n  database: {\n    url: process.env.DATABASE_URL,\n    logging: true,\n  },\n  auth: {\n    secret: process.env.NEXTAUTH_SECRET,\n    url: process.env.NEXTAUTH_URL,\n  },\n  app: {\n    debug: true,\n    logLevel: 'debug',\n  },\n};\n"})}),"\n",(0,o.jsx)(e.h4,{id:"production-environment-2",children:"Production Environment"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// config/production.ts\nexport const productionConfig = {\n  database: {\n    url: process.env.DATABASE_URL,\n    logging: false,\n    pool: {\n      min: 2,\n      max: 10,\n    },\n  },\n  auth: {\n    secret: process.env.NEXTAUTH_SECRET,\n    url: process.env.NEXTAUTH_URL,\n  },\n  app: {\n    debug: false,\n    logLevel: 'error',\n  },\n};\n"})}),"\n",(0,o.jsx)(e.h4,{id:"configuration-loader",children:"Configuration Loader"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// config/index.ts\nimport { developmentConfig } from './development';\nimport { productionConfig } from './production';\n\nconst configs = {\n  development: developmentConfig,\n  production: productionConfig,\n  test: developmentConfig,\n};\n\nexport const config = configs[process.env.NODE_ENV || 'development'];\n"})}),"\n",(0,o.jsx)(e.h2,{id:"-environment-setup-scripts",children:"\ud83d\udd27 Environment Setup Scripts"}),"\n",(0,o.jsx)(e.h3,{id:"setup-scripts",children:"Setup Scripts"}),"\n",(0,o.jsx)(e.h4,{id:"development-setup",children:"Development Setup"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\n# scripts/setup-dev.sh\n\necho "Setting up development environment..."\n\n# Copy environment file\nif [ ! -f .env.local ]; then\n  cp .env.example .env.local\n  echo "Created .env.local from .env.example"\n  echo "Please update .env.local with your configuration"\nelse\n  echo ".env.local already exists"\nfi\n\n# Install dependencies\necho "Installing dependencies..."\nbun install\n\n# Generate Prisma client\necho "Generating Prisma client..."\nbunx prisma generate\n\n# Run database migrations\necho "Running database migrations..."\nbunx prisma migrate dev\n\n# Start development server\necho "Starting development server..."\nbun coolDev\n'})}),"\n",(0,o.jsx)(e.h4,{id:"production-setup",children:"Production Setup"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\n# scripts/setup-prod.sh\n\necho "Setting up production environment..."\n\n# Validate environment variables\nrequired_vars=("DATABASE_URL" "NEXTAUTH_SECRET" "NEXTAUTH_URL")\n\nfor var in "${required_vars[@]}"; do\n  if [ -z "${!var}" ]; then\n    echo "Error: $var is not set"\n    exit 1\n  fi\ndone\n\n# Install dependencies\necho "Installing dependencies..."\nbun install --frozen-lockfile\n\n# Generate Prisma client\necho "Generating Prisma client..."\nbunx prisma generate\n\n# Run database migrations\necho "Running database migrations..."\nbunx prisma migrate deploy\n\n# Build application\necho "Building application..."\nbun run build\n\necho "Production setup complete!"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"environment-validation",children:"Environment Validation"}),"\n",(0,o.jsx)(e.h4,{id:"validation-script",children:"Validation Script"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// scripts/validate-env.ts\nimport { z } from 'zod';\nimport { config } from 'dotenv';\n\n// Load environment variables\nconfig();\n\nconst envSchema = z.object({\n  DATABASE_URL: z.string().url('DATABASE_URL must be a valid URL'),\n  NEXTAUTH_SECRET: z.string().min(32, 'NEXTAUTH_SECRET must be at least 32 characters'),\n  NEXTAUTH_URL: z.string().url('NEXTAUTH_URL must be a valid URL'),\n  NODE_ENV: z.enum(['development', 'production', 'test']),\n});\n\ntry {\n  envSchema.parse(process.env);\n  console.log('\u2705 Environment variables are valid');\n} catch (error) {\n  if (error instanceof z.ZodError) {\n    console.error('\u274c Environment validation failed:');\n    error.errors.forEach((err) => {\n      console.error(`  - ${err.path.join('.')}: ${err.message}`);\n    });\n    process.exit(1);\n  }\n}\n"})}),"\n",(0,o.jsx)(e.h4,{id:"packagejson-scripts",children:"Package.json Scripts"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n  "scripts": {\n    "validate-env": "bun run scripts/validate-env.ts",\n    "setup-dev": "bash scripts/setup-dev.sh",\n    "setup-prod": "bash scripts/setup-prod.sh",\n    "prebuild": "bun run validate-env",\n    "prestart": "bun run validate-env"\n  }\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"-environment-monitoring",children:"\ud83d\udcca Environment Monitoring"}),"\n",(0,o.jsx)(e.h3,{id:"environment-health-check",children:"Environment Health Check"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// app/api/health/route.ts\nimport { NextResponse } from 'next/server';\nimport { prisma } from '@/lib/generated/prisma';\n\nexport async function GET() {\n  try {\n    // Check database connection\n    await prisma.$queryRaw`SELECT 1`;\n    \n    // Check environment variables\n    const requiredEnvVars = [\n      'DATABASE_URL',\n      'NEXTAUTH_SECRET',\n      'NEXTAUTH_URL',\n    ];\n    \n    const missingVars = requiredEnvVars.filter(\n      (varName) => !process.env[varName]\n    );\n    \n    if (missingVars.length > 0) {\n      return NextResponse.json(\n        {\n          status: 'error',\n          message: 'Missing environment variables',\n          missing: missingVars,\n        },\n        { status: 500 }\n      );\n    }\n    \n    return NextResponse.json({\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      environment: process.env.NODE_ENV,\n      database: 'connected',\n    });\n  } catch (error) {\n    return NextResponse.json(\n      {\n        status: 'error',\n        message: 'Health check failed',\n        error: error instanceof Error ? error.message : 'Unknown error',\n      },\n      { status: 500 }\n    );\n  }\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"environment-information",children:"Environment Information"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// lib/env-info.ts\nexport function getEnvironmentInfo() {\n  return {\n    nodeEnv: process.env.NODE_ENV,\n    appUrl: process.env.NEXT_PUBLIC_APP_URL,\n    apiUrl: process.env.NEXT_PUBLIC_API_URL,\n    databaseUrl: process.env.DATABASE_URL ? 'configured' : 'missing',\n    authSecret: process.env.NEXTAUTH_SECRET ? 'configured' : 'missing',\n    supabaseUrl: process.env.SUPABASE_URL ? 'configured' : 'missing',\n    debug: process.env.NEXT_PUBLIC_ENABLE_DEBUG === 'true',\n    analytics: process.env.NEXT_PUBLIC_ENABLE_ANALYTICS === 'true',\n  };\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"-related-documentation",children:"\ud83d\udcda Related Documentation"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.a,{href:"./setup",children:"Development Setup"})})," - Initial environment setup"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.a,{href:"./scripts",children:"Available Scripts"})})," - Environment-related scripts"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.a,{href:"./database",children:"Database & Prisma"})})," - Database configuration"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.a,{href:"./troubleshooting",children:"Troubleshooting"})})," - Environment issues"]}),"\n"]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Configure your environment for optimal development and deployment!"})," \ud83d\udd27"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>a});var r=i(6540);const o={},s=r.createContext(o);function t(n){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:t(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);