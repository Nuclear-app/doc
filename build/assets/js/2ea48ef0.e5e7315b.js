"use strict";(self.webpackChunknuclear_docs=self.webpackChunknuclear_docs||[]).push([[16],{2554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"development/ui-framework","title":"UI Framework & Styling","description":"Complete guide to the UI technologies, styling approach, and component patterns used in the Nuclear application.","source":"@site/docs/development/ui-framework.md","sourceDirName":"development","slug":"/development/ui-framework","permalink":"/docs/development/ui-framework","draft":false,"unlisted":false,"editUrl":"https://github.com/nuclear-app/doc/tree/main/docs/development/ui-framework.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Development Workflow","permalink":"/docs/development/workflow"},"next":{"title":"API Documentation","permalink":"/docs/development/api"}}');var o=t(4848),a=t(8453);const s={sidebar_position:7},i="UI Framework & Styling",l={},d=[{value:"\ud83c\udfa8 Technology Stack",id:"-technology-stack",level:2},{value:"Core Technologies",id:"core-technologies",level:3},{value:"Key Features",id:"key-features",level:3},{value:"\ud83c\udfd7\ufe0f Next.js 14 Architecture",id:"\ufe0f-nextjs-14-architecture",level:2},{value:"App Router Structure",id:"app-router-structure",level:3},{value:"Server vs Client Components",id:"server-vs-client-components",level:3},{value:"Server Components (Default)",id:"server-components-default",level:4},{value:"Client Components",id:"client-components",level:4},{value:"Layout System",id:"layout-system",level:3},{value:"Root Layout",id:"root-layout",level:4},{value:"Dashboard Layout",id:"dashboard-layout",level:4},{value:"\ud83c\udfa8 Tailwind CSS",id:"-tailwind-css",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Tailwind Config",id:"tailwind-config",level:4},{value:"Global Styles",id:"global-styles",level:4},{value:"Utility Classes",id:"utility-classes",level:3},{value:"Layout Utilities",id:"layout-utilities",level:4},{value:"Responsive Design",id:"responsive-design",level:4},{value:"Dark Mode",id:"dark-mode",level:4},{value:"\ud83e\udde9 Component Library",id:"-component-library",level:2},{value:"Base Components",id:"base-components",level:3},{value:"Button Component",id:"button-component",level:4},{value:"Input Component",id:"input-component",level:4},{value:"Card Component",id:"card-component",level:4},{value:"Form Components",id:"form-components",level:3},{value:"Form Component",id:"form-component",level:4},{value:"\ud83c\udfaf Styling Best Practices",id:"-styling-best-practices",level:2},{value:"Component Organization",id:"component-organization",level:3},{value:"File Structure",id:"file-structure",level:4},{value:"Component Patterns",id:"component-patterns",level:4},{value:"Responsive Design",id:"responsive-design-1",level:3},{value:"Mobile-First Approach",id:"mobile-first-approach",level:4},{value:"Responsive Typography",id:"responsive-typography",level:4},{value:"Accessibility",id:"accessibility",level:3},{value:"ARIA Labels",id:"aria-labels",level:4},{value:"Keyboard Navigation",id:"keyboard-navigation",level:4},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Code Splitting",id:"code-splitting",level:4},{value:"Memoization",id:"memoization",level:4},{value:"\ud83c\udfa8 Theme System",id:"-theme-system",level:2},{value:"Color Palette",id:"color-palette",level:3},{value:"Typography Scale",id:"typography-scale",level:3},{value:"\ud83d\udcda Related Documentation",id:"-related-documentation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"ui-framework--styling",children:"UI Framework & Styling"})}),"\n",(0,o.jsx)(n.p,{children:"Complete guide to the UI technologies, styling approach, and component patterns used in the Nuclear application."}),"\n",(0,o.jsx)(n.h2,{id:"-technology-stack",children:"\ud83c\udfa8 Technology Stack"}),"\n",(0,o.jsx)(n.h3,{id:"core-technologies",children:"Core Technologies"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Next.js 14"})," - React framework with app router"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"TypeScript"})," - Type-safe JavaScript"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Tailwind CSS"})," - Utility-first CSS framework"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Nyxb UI"})," - Component library"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"React"})," - UI library"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Server Components"})," - Better performance and SEO"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Responsive Design"})," - Mobile-first approach"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Dark Mode"})," - Built-in theme support"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accessibility"})," - WCAG compliance"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type Safety"})," - Full TypeScript integration"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-nextjs-14-architecture",children:"\ud83c\udfd7\ufe0f Next.js 14 Architecture"}),"\n",(0,o.jsx)(n.h3,{id:"app-router-structure",children:"App Router Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"app/\n\u251c\u2500\u2500 layout.tsx              # Root layout\n\u251c\u2500\u2500 page.tsx                # Home page\n\u251c\u2500\u2500 globals.css             # Global styles\n\u251c\u2500\u2500 api/                    # API routes\n\u251c\u2500\u2500 dashboard/              # Dashboard pages\n\u2502   \u251c\u2500\u2500 layout.tsx          # Dashboard layout\n\u2502   \u251c\u2500\u2500 page.tsx            # Dashboard home\n\u2502   \u251c\u2500\u2500 blocks/             # Block management\n\u2502   \u2514\u2500\u2500 users/              # User management\n\u2514\u2500\u2500 auth/                   # Authentication pages\n"})}),"\n",(0,o.jsx)(n.h3,{id:"server-vs-client-components",children:"Server vs Client Components"}),"\n",(0,o.jsx)(n.h4,{id:"server-components-default",children:"Server Components (Default)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// app/dashboard/page.tsx\nimport { getBlocks } from \'@/lib/block\';\n\nexport default async function DashboardPage() {\n  const blocks = await getBlocks();\n  \n  return (\n    <div className="container mx-auto p-6">\n      <h1 className="text-2xl font-bold mb-6">Dashboard</h1>\n      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">\n        {blocks.map(block => (\n          <BlockCard key={block.id} block={block} />\n        ))}\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"client-components",children:"Client Components"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\n\nexport default function InteractiveComponent() {\n  const [count, setCount] = useState(0);\n  \n  return (\n    <div className=\"p-4\">\n      <p className=\"text-lg mb-4\">Count: {count}</p>\n      <Button onClick={() => setCount(count + 1)}>\n        Increment\n      </Button>\n    </div>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"layout-system",children:"Layout System"}),"\n",(0,o.jsx)(n.h4,{id:"root-layout",children:"Root Layout"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// app/layout.tsx\nimport type { Metadata } from 'next';\nimport { Inter } from 'next/font/google';\nimport './globals.css';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata: Metadata = {\n  title: 'Nuclear Application',\n  description: 'Modern learning platform',\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>\n        {children}\n      </body>\n    </html>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h4,{id:"dashboard-layout",children:"Dashboard Layout"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// app/dashboard/layout.tsx\nimport { Sidebar } from \'@/components/dashboard/Sidebar\';\nimport { Header } from \'@/components/dashboard/Header\';\n\nexport default function DashboardLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <div className="flex h-screen bg-gray-50">\n      <Sidebar />\n      <div className="flex-1 flex flex-col overflow-hidden">\n        <Header />\n        <main className="flex-1 overflow-x-hidden overflow-y-auto bg-gray-50">\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"-tailwind-css",children:"\ud83c\udfa8 Tailwind CSS"}),"\n",(0,o.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(n.h4,{id:"tailwind-config",children:"Tailwind Config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// tailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './components/**/*.{js,ts,jsx,tsx,mdx}',\n    './app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      colors: {\n        primary: {\n          50: '#eff6ff',\n          500: '#3b82f6',\n          600: '#2563eb',\n          700: '#1d4ed8',\n        },\n        gray: {\n          50: '#f9fafb',\n          100: '#f3f4f6',\n          200: '#e5e7eb',\n          300: '#d1d5db',\n          400: '#9ca3af',\n          500: '#6b7280',\n          600: '#4b5563',\n          700: '#374151',\n          800: '#1f2937',\n          900: '#111827',\n        },\n      },\n      fontFamily: {\n        sans: ['Inter', 'system-ui', 'sans-serif'],\n      },\n      spacing: {\n        '18': '4.5rem',\n        '88': '22rem',\n      },\n    },\n  },\n  plugins: [],\n};\n"})}),"\n",(0,o.jsx)(n.h4,{id:"global-styles",children:"Global Styles"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"/* app/globals.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  html {\n    font-family: Inter, system-ui, sans-serif;\n  }\n  \n  body {\n    @apply bg-white text-gray-900 dark:bg-gray-900 dark:text-gray-100;\n  }\n}\n\n@layer components {\n  .btn-primary {\n    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;\n  }\n  \n  .card {\n    @apply bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700;\n  }\n  \n  .input-field {\n    @apply w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white;\n  }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"utility-classes",children:"Utility Classes"}),"\n",(0,o.jsx)(n.h4,{id:"layout-utilities",children:"Layout Utilities"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Flexbox\n<div className="flex items-center justify-between">\n  <div>Left content</div>\n  <div>Right content</div>\n</div>\n\n// Grid\n<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">\n  <div>Grid item 1</div>\n  <div>Grid item 2</div>\n  <div>Grid item 3</div>\n</div>\n\n// Spacing\n<div className="p-4 m-2 space-y-4">\n  <div>Item with spacing</div>\n  <div>Another item</div>\n</div>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Mobile-first responsive design\n<div className="\n  w-full                    // Full width on mobile\n  md:w-1/2                  // Half width on medium screens\n  lg:w-1/3                  // One-third on large screens\n  xl:w-1/4                  // One-quarter on extra large screens\n">\n  Responsive content\n</div>\n\n// Responsive text sizes\n<h1 className="\n  text-xl                   // Small on mobile\n  md:text-2xl               // Medium on tablets\n  lg:text-3xl               // Large on desktop\n  xl:text-4xl               // Extra large on wide screens\n">\n  Responsive heading\n</h1>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"dark-mode",children:"Dark Mode"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Dark mode support\n<div className="\n  bg-white                  // Light background\n  dark:bg-gray-900          // Dark background\n  text-gray-900             // Light text\n  dark:text-gray-100        // Dark text\n  border-gray-200           // Light border\n  dark:border-gray-700      // Dark border\n">\n  Dark mode compatible content\n</div>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"-component-library",children:"\ud83e\udde9 Component Library"}),"\n",(0,o.jsx)(n.h3,{id:"base-components",children:"Base Components"}),"\n",(0,o.jsx)(n.h4,{id:"button-component",children:"Button Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// components/ui/Button.tsx\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  loading?: boolean;\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = 'primary', size = 'md', loading, children, ...props }, ref) => {\n    const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';\n    \n    const variants = {\n      primary: 'bg-primary-600 hover:bg-primary-700 text-white focus:ring-primary-500',\n      secondary: 'bg-gray-600 hover:bg-gray-700 text-white focus:ring-gray-500',\n      outline: 'border border-gray-300 hover:bg-gray-50 text-gray-700 focus:ring-gray-500',\n      ghost: 'hover:bg-gray-100 text-gray-700 focus:ring-gray-500',\n    };\n    \n    const sizes = {\n      sm: 'px-3 py-1.5 text-sm',\n      md: 'px-4 py-2 text-sm',\n      lg: 'px-6 py-3 text-base',\n    };\n    \n    return (\n      <button\n        className={cn(\n          baseClasses,\n          variants[variant],\n          sizes[size],\n          className\n        )}\n        ref={ref}\n        disabled={loading}\n        {...props}\n      >\n        {loading && (\n          <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n          </svg>\n        )}\n        {children}\n      </button>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n"})}),"\n",(0,o.jsx)(n.h4,{id:"input-component",children:"Input Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// components/ui/Input.tsx\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, label, error, helperText, ...props }, ref) => {\n    return (\n      <div className=\"space-y-1\">\n        {label && (\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            {label}\n          </label>\n        )}\n        <input\n          className={cn(\n            'w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-200',\n            'border-gray-300 focus:border-primary-500 focus:ring-primary-500',\n            'dark:border-gray-600 dark:bg-gray-700 dark:text-white',\n            'dark:focus:border-primary-400 dark:focus:ring-primary-400',\n            error && 'border-red-300 focus:border-red-500 focus:ring-red-500',\n            error && 'dark:border-red-600 dark:focus:border-red-400 dark:focus:ring-red-400',\n            className\n          )}\n          ref={ref}\n          {...props}\n        />\n        {error && (\n          <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n        )}\n        {helperText && !error && (\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{helperText}</p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n"})}),"\n",(0,o.jsx)(n.h4,{id:"card-component",children:"Card Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// components/ui/Card.tsx\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n}\n\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700',\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nCard.displayName = 'Card';\n\n// Card sub-components\nCard.Header = ({ className, children, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('px-6 py-4 border-b border-gray-200 dark:border-gray-700', className)} {...props}>\n    {children}\n  </div>\n);\n\nCard.Content = ({ className, children, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('px-6 py-4', className)} {...props}>\n    {children}\n  </div>\n);\n\nCard.Footer = ({ className, children, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('px-6 py-4 border-t border-gray-200 dark:border-gray-700', className)} {...props}>\n    {children}\n  </div>\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"form-components",children:"Form Components"}),"\n",(0,o.jsx)(n.h4,{id:"form-component",children:"Form Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// components/forms/BlockForm.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { Input } from '@/components/ui/Input';\nimport { Card } from '@/components/ui/Card';\nimport { createBlock } from '@/lib/block';\n\ninterface BlockFormProps {\n  onSubmit?: (block: any) => void;\n  initialData?: any;\n}\n\nexport function BlockForm({ onSubmit, initialData }: BlockFormProps) {\n  const [formData, setFormData] = useState({\n    title: initialData?.title || '',\n    content: initialData?.content || '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrors({});\n\n    try {\n      const block = await createBlock({\n        ...formData,\n        authorId: 'current-user-id', // Get from auth context\n      });\n      \n      onSubmit?.(block);\n      setFormData({ title: '', content: '' });\n    } catch (error: any) {\n      setErrors({ submit: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header>\n        <h2 className=\"text-lg font-semibold\">Create New Block</h2>\n      </Card.Header>\n      <form onSubmit={handleSubmit}>\n        <Card.Content className=\"space-y-4\">\n          <Input\n            label=\"Title\"\n            value={formData.title}\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            error={errors.title}\n            required\n          />\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Content\n            </label>\n            <textarea\n              value={formData.content}\n              onChange={(e) => setFormData({ ...formData, content: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white resize-none\"\n              rows={6}\n              required\n            />\n            {errors.content && (\n              <p className=\"text-sm text-red-600 dark:text-red-400\">{errors.content}</p>\n            )}\n          </div>\n          {errors.submit && (\n            <p className=\"text-sm text-red-600 dark:text-red-400\">{errors.submit}</p>\n          )}\n        </Card.Content>\n        <Card.Footer>\n          <Button type=\"submit\" loading={loading}>\n            Create Block\n          </Button>\n        </Card.Footer>\n      </form>\n    </Card>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-styling-best-practices",children:"\ud83c\udfaf Styling Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"component-organization",children:"Component Organization"}),"\n",(0,o.jsx)(n.h4,{id:"file-structure",children:"File Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"components/\n\u251c\u2500\u2500 ui/                     # Base UI components\n\u2502   \u251c\u2500\u2500 Button.tsx\n\u2502   \u251c\u2500\u2500 Input.tsx\n\u2502   \u251c\u2500\u2500 Card.tsx\n\u2502   \u2514\u2500\u2500 index.ts           # Export all UI components\n\u251c\u2500\u2500 forms/                  # Form components\n\u2502   \u251c\u2500\u2500 BlockForm.tsx\n\u2502   \u251c\u2500\u2500 QuizForm.tsx\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 dashboard/              # Dashboard-specific components\n\u2502   \u251c\u2500\u2500 Sidebar.tsx\n\u2502   \u251c\u2500\u2500 Header.tsx\n\u2502   \u2514\u2500\u2500 index.ts\n\u2514\u2500\u2500 shared/                 # Shared utility components\n    \u251c\u2500\u2500 LoadingSpinner.tsx\n    \u251c\u2500\u2500 ErrorBoundary.tsx\n    \u2514\u2500\u2500 index.ts\n"})}),"\n",(0,o.jsx)(n.h4,{id:"component-patterns",children:"Component Patterns"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Good - Forward refs for flexibility\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, ...props }, ref) => {\n    return <button ref={ref} className={cn(baseClasses, className)} {...props} />;\n  }\n);\n\n// \u2705 Good - Compound components for complex UIs\nCard.Header = ({ children, ...props }) => (\n  <div className="px-6 py-4 border-b" {...props}>{children}</div>\n);\n\n// \u2705 Good - Custom hooks for logic\nconst useForm = (initialData: any) => {\n  const [data, setData] = useState(initialData);\n  const [errors, setErrors] = useState({});\n  \n  return { data, setData, errors, setErrors };\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"responsive-design-1",children:"Responsive Design"}),"\n",(0,o.jsx)(n.h4,{id:"mobile-first-approach",children:"Mobile-First Approach"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Good - Mobile-first responsive design\n<div className="\n  grid grid-cols-1          // Single column on mobile\n  gap-4                     // Small gap on mobile\n  md:grid-cols-2           // Two columns on tablets\n  md:gap-6                 // Larger gap on tablets\n  lg:grid-cols-3           // Three columns on desktop\n  lg:gap-8                 // Largest gap on desktop\n">\n  {items.map(item => (\n    <Card key={item.id}>{item.content}</Card>\n  ))}\n</div>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"responsive-typography",children:"Responsive Typography"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Good - Responsive text sizing\n<h1 className="\n  text-2xl                  // Small on mobile\n  font-bold\n  text-gray-900\n  dark:text-gray-100\n  md:text-3xl              // Medium on tablets\n  lg:text-4xl              // Large on desktop\n  xl:text-5xl              // Extra large on wide screens\n">\n  Responsive Heading\n</h1>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,o.jsx)(n.h4,{id:"aria-labels",children:"ARIA Labels"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Good - Proper ARIA labels\n<button\n  aria-label="Close modal"\n  className="p-2 rounded-full hover:bg-gray-100"\n>\n  <XIcon className="w-5 h-5" />\n</button>\n\n// \u2705 Good - Form labels\n<label htmlFor="email" className="block text-sm font-medium">\n  Email Address\n</label>\n<input\n  id="email"\n  type="email"\n  aria-describedby="email-help"\n  className="mt-1 block w-full"\n/>\n<p id="email-help" className="text-sm text-gray-500">\n  We\'ll never share your email with anyone else.\n</p>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"keyboard-navigation",children:"Keyboard Navigation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// \u2705 Good - Keyboard accessible\n<div\n  role=\"button\"\n  tabIndex={0}\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick();\n    }\n  }}\n  onClick={handleClick}\n  className=\"cursor-pointer focus:outline-none focus:ring-2 focus:ring-primary-500\"\n>\n  Clickable content\n</div>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,o.jsx)(n.h4,{id:"code-splitting",children:"Code Splitting"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Good - Dynamic imports for large components\nimport dynamic from \'next/dynamic\';\n\nconst HeavyChart = dynamic(() => import(\'./HeavyChart\'), {\n  loading: () => <div>Loading chart...</div>,\n  ssr: false, // Disable SSR for client-only components\n});\n\n// \u2705 Good - Lazy load images\nimport Image from \'next/image\';\n\n<Image\n  src="/large-image.jpg"\n  alt="Description"\n  width={800}\n  height={600}\n  loading="lazy"\n  placeholder="blur"\n  blurDataURL="data:image/jpeg;base64,..."\n/>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"memoization",children:"Memoization"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// \u2705 Good - Memoize expensive components\nconst ExpensiveList = React.memo(({ items }: { items: Item[] }) => {\n  return (\n    <div>\n      {items.map(item => (\n        <ListItem key={item.id} item={item} />\n      ))}\n    </div>\n  );\n});\n\n// \u2705 Good - Memoize expensive calculations\nconst ExpensiveComponent = ({ data }: { data: any[] }) => {\n  const processedData = useMemo(() => {\n    return data.map(item => heavyProcessing(item));\n  }, [data]);\n\n  return <div>{/* Use processedData */}</div>;\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-theme-system",children:"\ud83c\udfa8 Theme System"}),"\n",(0,o.jsx)(n.h3,{id:"color-palette",children:"Color Palette"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Design system colors\nconst colors = {\n  primary: {\n    50: '#eff6ff',\n    100: '#dbeafe',\n    200: '#bfdbfe',\n    300: '#93c5fd',\n    400: '#60a5fa',\n    500: '#3b82f6',\n    600: '#2563eb',\n    700: '#1d4ed8',\n    800: '#1e40af',\n    900: '#1e3a8a',\n  },\n  gray: {\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    300: '#d1d5db',\n    400: '#9ca3af',\n    500: '#6b7280',\n    600: '#4b5563',\n    700: '#374151',\n    800: '#1f2937',\n    900: '#111827',\n  },\n  success: {\n    50: '#f0fdf4',\n    500: '#22c55e',\n    600: '#16a34a',\n  },\n  warning: {\n    50: '#fffbeb',\n    500: '#f59e0b',\n    600: '#d97706',\n  },\n  error: {\n    50: '#fef2f2',\n    500: '#ef4444',\n    600: '#dc2626',\n  },\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"typography-scale",children:"Typography Scale"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Typography system\nconst typography = {\n  h1: 'text-4xl font-bold tracking-tight',\n  h2: 'text-3xl font-bold tracking-tight',\n  h3: 'text-2xl font-semibold',\n  h4: 'text-xl font-semibold',\n  h5: 'text-lg font-medium',\n  h6: 'text-base font-medium',\n  body: 'text-base',\n  small: 'text-sm',\n  caption: 'text-xs',\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-related-documentation",children:"\ud83d\udcda Related Documentation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./setup",children:"Development Setup"})})," - Environment setup"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./project-structure",children:"Project Structure"})})," - Codebase organization"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./api",children:"API Documentation"})})," - Backend integration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./troubleshooting",children:"Troubleshooting"})})," - Common UI issues"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Build beautiful, accessible, and performant user interfaces!"})," \ud83c\udfa8"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);